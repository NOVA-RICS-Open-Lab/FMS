#include "GPRSClient.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
GPRSClient::GPRSClient() : sock(GPRSModule::Invalid) {
	remoteClient = true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
GPRSClient::GPRSClient(uint8_t sock) : sock(sock) {
	remoteClient = true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
int GPRSClient::connect(IPAddress ip, uint16_t port) {
	String host(ip[0]);
	host += '.';
	host += String(ip[1]);
	host += '.';
	host += String(ip[2]);
	host += '.';
	host += String(ip[3]);
	return connect(host.c_str(), port);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
int GPRSClient::connect(const char *host, uint16_t port) {
	if (sock != GPRSModule::Invalid) {
		return 0;
	}
	remoteClient = false;
	sock = GPRSModule::startTCPConnection(host, port);
	return sock != GPRSModule::Invalid ? 1 : 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
size_t GPRSClient::write(uint8_t data) {
	return write(&data, 1);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
size_t GPRSClient::write(const uint8_t *buf, size_t size) {
	if (sock >= GPRSModule::MaxConnections) {
		return 0;
	}
	return GPRSModule::writeToConnection(sock, buf, size);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
int GPRSClient::available() {
	if (sock >= GPRSModule::MaxConnections) {
		return 0;
	}
	return GPRSModule::getConnectionAvailable(sock);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
int GPRSClient::read() {
	uint8_t ret;
	if (read(&ret, 1) == 1) {
		return ret;
	}
	return -1;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
int GPRSClient::read(uint8_t *buf, size_t size) {
	if (sock >= GPRSModule::MaxConnections) {
		return -1;
	}
	return GPRSModule::readFromConnection(sock, buf, size);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
int GPRSClient::peek() {
	// NOT IMPLEMENTED
	return -1;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void GPRSClient::flush() {
	GPRSModule::flush();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void GPRSClient::stop() {
	if (sock < GPRSModule::MaxConnections) {
		GPRSModule::stopConnection(sock);
		sock = GPRSModule::Invalid;
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////
uint8_t GPRSClient::connected() {
	if (sock >= GPRSModule::MaxConnections) {
		return 0;
	}
	return GPRSModule::isConnectedConnection(sock);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
GPRSClient::operator bool() {
	return sock < GPRSModule::MaxConnections;
}
